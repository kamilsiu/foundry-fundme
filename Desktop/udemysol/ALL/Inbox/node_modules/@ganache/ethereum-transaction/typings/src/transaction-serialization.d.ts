/// <reference types="node" />
import { Quantity, Data } from "@ganache/utils";
import { Address } from "@ganache/ethereum-address";
import { EIP1559FeeMarketRawTransaction, EIP2930AccessListRawTransaction, LegacyRawTransaction, TypedRawTransaction } from "./raw";
import { EIP1559FeeMarketRpcTransaction, EIP2930AccessListRpcTransaction, LegacyRpcTransaction, Transaction, TransactionType } from "./rpc-transaction";
export declare function serializeRpcForDb(tx: Transaction, blockHash: Data, blockNumber: Quantity, transactionIndex: Quantity): Buffer;
export type SerializableTransaction = {
    raw: TypedRawTransaction;
    from: Address;
    hash: Data;
    effectiveGasPrice: Quantity;
    type: Quantity;
};
export declare function serializeForDb(tx: SerializableTransaction, blockHash: Data, blockNumber: Quantity, transactionIndex: Quantity): Buffer;
export declare function rawFromRpc(txData: LegacyRpcTransaction, txType: TransactionType.Legacy): LegacyRawTransaction;
export declare function rawFromRpc(txData: EIP2930AccessListRpcTransaction, txType: TransactionType.EIP1559AccessList): EIP2930AccessListRawTransaction | LegacyRawTransaction;
export declare function rawFromRpc(txData: EIP1559FeeMarketRpcTransaction, txType: TransactionType.EIP1559AccessList): EIP1559FeeMarketRawTransaction;
export declare function rawFromRpc(txData: Transaction, txType: TransactionType): TypedRawTransaction;
//# sourceMappingURL=transaction-serialization.d.ts.map