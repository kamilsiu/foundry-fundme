/// <reference types="node" />
import { Definitions } from "@ganache/options";
import { PathLike } from "fs";
import { Logger, InternalLogger } from "@ganache/utils";
export type LoggingConfig = {
    options: {
        /**
         * Set to `true` to log EVM opcodes.
         *
         * @defaultValue false
         */
        readonly debug: {
            type: boolean;
            hasDefault: true;
            legacy: {
                /**
                 * @deprecated Use logging.debug instead
                 */
                debug: boolean;
            };
        };
        /**
         * An object, like `console`, that implements a `log` function.
         *
         * Defaults to `console` (logs to stdout).
         *
         * @example
         * ```typescript
         * {
         * 	log: (message: any) => {
         * 		// handle `message`
         * 	}
         * }
         * ```
         */
        readonly logger: {
            rawType: Logger;
            type: InternalLogger;
            hasDefault: true;
            legacy: {
                /**
                 * @deprecated Use logging.logger instead
                 */
                logger: Logger;
            };
        };
        /**
         * Set to `true` to log detailed RPC requests.
         *
         * @defaultValue false
         */
        readonly verbose: {
            type: boolean;
            hasDefault: true;
            legacy: {
                /**
                 * @deprecated Use logging.verbose instead
                 */
                verbose: boolean;
            };
        };
        /**
         * Set to `true` to disable writing logs to stdout (or logging.logger if specified).
         * This option does not impact writing logs to a file (with logging.file).
         *
         * @defaultValue false
         */
        readonly quiet: {
            type: boolean;
            hasDefault: true;
        };
        /**
         * The file to append logs to.
         *
         * Can be a filename, or an instance of URL.
         * note: the URL scheme must be `file`, e.g., `file://path/to/file.log`.
         *
         * By default no log file is created.
         */
        readonly file: {
            type: number;
            rawType: PathLike;
        };
    };
};
export declare const LoggingOptions: Definitions<LoggingConfig>;
//# sourceMappingURL=logging-options.d.ts.map