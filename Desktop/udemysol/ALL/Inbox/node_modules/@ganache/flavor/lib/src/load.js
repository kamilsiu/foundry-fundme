"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.load = void 0;
const chalk_1 = __importDefault(require("chalk"));
const colors_1 = require("@ganache/colors");
const utils_1 = require("@ganache/utils");
/**
 * Load the given package using node's `require` function. This is used to load
 * flavors plugins.
 * @param flavor
 * @returns
 */
function load(flavor) {
    // `@ganache/filecoin` used to be named just `filecoin`, we we need to
    // preserve this alias for backwards compatibility
    if (flavor === "filecoin")
        flavor = "@ganache/filecoin";
    try {
        // we use `eval` to prevent webpack from resolving the `require` statement.
        const flavorImport = eval("require")(flavor);
        // @ganache/filecoin used to not have a `default` export and that version is
        // missing many properties we need now, so we fail for those old versions.
        if (flavor === "@ganache/filecoin" && !flavorImport.default) {
            // avoid printing stack trace as it's webpacked and is not helpful
            console.error("Your version of @ganache/filecoin is outdated. Please install the latest version by running `npm install @ganache/filecoin --global`.");
            process.exit(1);
        }
        return flavorImport.default;
    }
    catch (e) {
        if ((0, utils_1.hasOwn)(e, "message") &&
            typeof e.message === "string" &&
            e.message.includes(`Cannot find module '${flavor}'`)) {
            const NEED_HELP = "Need help? Reach out to the Truffle community at";
            const COMMUNITY_LINK = "https://trfl.io/support";
            // we print and exit rather than throw to prevent webpack output from being
            // spat out for the line number
            console.warn((0, chalk_1.default) `\n\n{red.bold ERROR:} Could not find Ganache flavor "{bold ${flavor}}"; ` +
                `it probably\nneeds to be installed.\n` +
                ` ▸ if you're using Ganache as a library run: \n` +
                (0, chalk_1.default) `   {blue.bold $ npm install ${flavor}}\n` +
                ` ▸ if you're using Ganache as a CLI run: \n` +
                (0, chalk_1.default) `   {blue.bold $ npm install --global ${flavor}}\n\n` +
                (0, chalk_1.default) `{hex("${colors_1.TruffleColors.porsche}").bold ${NEED_HELP}}\n` +
                (0, chalk_1.default) `{hex("${colors_1.TruffleColors.turquoise}") ${COMMUNITY_LINK}}\n\n`);
            process.exit(1);
        }
        else {
            throw e;
        }
    }
}
exports.load = load;
//# sourceMappingURL=load.js.map